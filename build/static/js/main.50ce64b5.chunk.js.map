{"version":3,"sources":["img/header-light-mode-background-image.jpeg","img/DarkMode.svg","img/lightMode.svg","components/DarkMode/DarkMode.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","img/NoTodo.svg","components/NoTodo/NoTodo.js","App.js","reportWebVitals.js","index.js"],"names":["DarkMode","props","state","lightmode","handleDarkMode","bind","this","setState","type","onClick","src","darkImg","lightImg","alt","React","Component","TodoList","listDate","JSON","parse","localStorage","getItem","className","map","task","id","title","NewTodo","holder","handleChange","handleSubmit","event","target","value","e","preventDefault","retrieve","todoTask","isFinished","Math","floor","random","push","setItem","stringify","reset","ReactDOM","render","StrictMode","document","getElementById","onSubmit","placeholder","onChange","required","NoTodo","noTodo","App","img","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.50ce64b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-light-mode-background-image.50b29470.jpeg\";","export default __webpack_public_path__ + \"static/media/DarkMode.c9180100.svg\";","export default __webpack_public_path__ + \"static/media/lightMode.faa5054f.svg\";","import React from \"react\";\r\n\r\nimport darkImg from \"../../img/DarkMode.svg\";\r\n\r\nimport lightImg from \"../../img/lightMode.svg\";\r\n\r\nexport default class DarkMode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lightmode: true,\r\n    };\r\n\r\n    this.handleDarkMode = this.handleDarkMode.bind(this);\r\n  }\r\n\r\n  handleDarkMode() {\r\n    const { lightmode } = this.state;\r\n\r\n    if (lightmode) {\r\n      this.setState({ lightmode: false });\r\n    } else {\r\n      this.setState({ lightmode: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { lightmode } = this.state;\r\n    return (\r\n      <button type=\"button\" onClick={this.handleDarkMode}>\r\n        <img src={lightmode ? darkImg : lightImg} alt=\"\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./TodoList.scss\";\r\n\r\nexport default class TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const listDate = JSON.parse(localStorage.getItem(\"list\"));\r\n\r\n    return (\r\n      <ul className=\"item__list\">\r\n        {listDate.map((task) => (\r\n          <li key={task.id} id={task.id} className=\"item__list--item\">\r\n            <input type=\"checkbox\" />\r\n            <span> {task.title}</span>\r\n            <button type=\"button\">del</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport TodoList from \"../TodoList\";\r\nimport \"./NewTodo.scss\";\r\n\r\nexport default class NewTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      holder: \"Add New Todo...\",\r\n      title: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ title: event.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { title } = this.state;\r\n    let retrieve = JSON.parse(localStorage.getItem(`list`));\r\n\r\n    // if there is no data then make it an empty array, to be able to push data in array afterwards\r\n\r\n    if (retrieve === null) {\r\n      retrieve = [];\r\n    }\r\n\r\n    const todoTask = {\r\n      title: title,\r\n      isFinished: false,\r\n      id: Math.floor(Math.random() * 1000000),\r\n    };\r\n\r\n    retrieve.push(todoTask);\r\n    localStorage.setItem(`list`, JSON.stringify(retrieve));\r\n\r\n    e.target.reset();\r\n\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <TodoList />\r\n      </React.StrictMode>,\r\n      document.getElementById(\"todo-list\"),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { holder } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"new__task\">\r\n          <span className=\"new__task--circle\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder={holder}\r\n            onChange={this.handleChange}\r\n            required\r\n            className=\"new__task--input\"\r\n          />\r\n          <button type=\"submit\" className=\"new__task--btn\">\r\n            â†µ\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/NoTodo.2662af3e.svg\";","import { React, Component } from \"react\";\r\nimport noTodo from \"../../img/NoTodo.svg\";\r\nimport \"./NoTodo.scss\";\r\n\r\nexport default class NoTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"notodo__img\" />\r\n        <div className=\"notodo__message\">\r\n          <img src={noTodo} alt=\"Type a new task and start organizing!!\" />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport img from \"./img/header-light-mode-background-image.jpeg\";\r\nimport DarkMode from \"./components/DarkMode\";\r\nimport NewTodo from \"./components/NewTodo\";\r\nimport NoTodo from \"./components/NoTodo/NoTodo\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport \"./main.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <div className=\"background--top\">\r\n          <img src={img} alt=\"bg-img\" />\r\n        </div>\r\n        <div className=\"background--bottom\" />\r\n      </div>\r\n      <main className=\"main\">\r\n        <header className=\"main--header\">\r\n          <h1>TODOS</h1> <DarkMode />\r\n        </header>\r\n        <section className=\"main__window\">\r\n          <div>\r\n            <NewTodo /> {/* Input for adding the Tasks */}\r\n          </div>\r\n          <div id=\"todo-list\">\r\n            {localStorage.getItem(\"list\") ? <TodoList /> : <NoTodo />}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}